################################################################################
# General
################################################################################

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Increase scrollback buffer size
set -g history-limit 10000

# Use Vi mode
setw -g mode-keys vi

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Set a terminal that apps will know how to handle
set -g default-terminal "screen-256color"

# Fix colors windows-terminal
set-option -ga terminal-overrides ",*-256color*:Tc"

# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable the mouse for scrolling
set -gq mouse on      # Tmux >= 2.1
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Allow tmux to set the titlebar
set -g set-titles on
set -g set-titles-string "#T - #W"

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# How long to display the pane number on PREFIX-q
set -g display-panes-time 3000 # 3s

# How long to wait for repeated keys bound with bind -r
set -g repeat-time 2000 # 2s

# Monitor window activity to display in the status bar
set-window-option -g monitor-activity on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy on

################################################################################
# Key Binding
################################################################################

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# reset prefix
set -g prefix M-space

# Send prefix to a nested tmux session by doubling the prefix
bind M-Space send-prefix

# source tmux.conf
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# rebind maximize to m
unbind z
bind m resize-pane -Z

# Switch between two most recently used windows
# bind Space last-window
bind -n C-';' last-window

# open sessionizer
bind -n M-p run-shell "tmux neww tmux-sessionizer"

# open lazygit
bind -n M-g new-window -c "#{pane_current_path}" "lazygit"

# open aerospace list
bind -n M-f new-window -c "#{pane_current_path}" "aerospace list-windows --all | fzf --bind 'enter:become(aerospace focus --window-id {1})'"

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-',' if-shell "$is_vim" 'send-keys C-,' 'resize-pane -L 10'
# bind-key -n C-'.' if-shell "$is_vim" 'send-keys C-.' 'resize-pane -R 10'
# bind-key -n C-'=' if-shell "$is_vim" 'send-keys C-=' 'resize-pane -U 10'
# bind-key -n C-'-' if-shell "$is_vim" 'send-keys C--' 'resize-pane -D 10'
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

bind-key -n C-']' if -F "#{@pane-is-vim}" 'send-keys C-]' 'resize-pane -L 10'
bind-key -n C-'\' if -F "#{@pane-is-vim}" 'send-keys C-\\' 'resize-pane -R 10'
bind-key -n C-'=' if -F "#{@pane-is-vim}" 'send-keys C-=' 'resize-pane -U 10'
bind-key -n C-'-' if -F "#{@pane-is-vim}" 'send-keys C--' 'resize-pane -D 10'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind "\\" split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
# bind c new-window -c "#{pane_current_path}"
bind Space new-window -c "#{pane_current_path}"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

################################################################################
# Plugins
################################################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

################################################################################
# THEME
################################################################################

# catppuccin-mocha
# set -g @bg_color "#1e1e2e"
# set -g @fg_color "#b4befe"
# set -g @accent_color "#f5c2e7"
# set -g @border_color "#181825"
# set -g @clock_color "#cdd6f4"

# rose-pine
set -g @bg_color "#191724"
set -g @fg_color "#c4a7e7" # iris
set -g @accent_color "#eb6f92" # love
set -g @border_color "#26233a"
set -g @clock_color "#908caa" # subtle

# statusbar colors
set-option -g status-style bg="#{@bg_color}",fg="#{@fg_color}"

# Show prefix status
set -g status-left '#{?client_prefix,#[reverse]#[fg=#{@fg_color}]#[bg=#{@bg_color}] ● #[fg=default]#[bg=default]#[noreverse],#[fg=#{@fg_color}]#[bg=#{@bg_color}] ● #[fg=default]#[bg=default]#[noreverse]} '

# Show date and time
set -g status-right-length 100
set -g status-right '#[reverse] #S #[noreverse] #[fg=#{@accent_color},bg=#{@bg_color}] %a, %d %b #[fg=#{@clock_color},bg=#{@bg_color}] %H:%M '

# window title color
set -g window-status-current-style fg="#{@accent_color}",bg="#{@bg_color},bright" # current highlighted window (tab)
set -g window-status-style fg="#{@fg_color}","bg=#{@bg_color},dim" # background windows

# pane border
set-option -g pane-border-style fg="#{@bg_color}"
set-option -g pane-active-border-style fg="#{@border_color}"

# message text
set-option -g message-style fg="#{@fg_color}",bg="#{@border_color}"

# pane number display
run-shell "tmux set-option -g display-panes-active-colour '#{@accent_color}'"
run-shell "tmux set-option -g display-panes-colour '#{@border_color}'"

# clock
run-shell "tmux set-window-option -g clock-mode-colour '#{@accent_color}'"

# Use window-status-format to format the window number
set -g window-status-separator " "
set -g window-status-format " #W "
set -g window-status-current-format " #W "


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
